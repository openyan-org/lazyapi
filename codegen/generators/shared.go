package generators

import (
	"bytes"
	"encoding/json"
	"html/template"
)

type GoAPI struct {
	MainFile         string `json:"main.go"`
	RepositoriesFile string `json:"repositories.go"`
	HandlersFile     string `json:"handlers.go"`
	EnvFile          string `json:".env"`
	SetupScriptFile  string `json:"setup.sh"`
	LazyAPIFile      string `json:"lazyapi.json"`
}

const envTemplate = `# Generated by OpenYan LazyAPI
# Enter your environment secrets here!

# Database URL configuration
DATABASE_URL=postgresql://postgres:postgres@localhost:5432/postgres
`

func renderTemplate(tmplContent string, data interface{}) (string, error) {
	tmpl, err := template.New("template").Parse(tmplContent)
	if err != nil {
		return "", err
	}

	var buf bytes.Buffer
	if err := tmpl.Execute(&buf, data); err != nil {
		return "", err
	}

	return buf.String(), nil
}

func generateJSON(data interface{}) (string, error) {
	var buf bytes.Buffer
	encoder := json.NewEncoder(&buf)
	encoder.SetIndent("", "  ")
	if err := encoder.Encode(data); err != nil {
		return "", err
	}
	return buf.String(), nil
}
